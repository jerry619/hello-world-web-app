name: 'Build and push to container-registry.com'
env:
  PYTHON_VERSION: "3.10"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

jobs:
  build-and-test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build and test
        uses: ./.github/actions/build-test-custom-actions
        with:
          num: ${{ env.PYTHON_VERSION }}
      #- name: Setup Python
      #  uses: actions/setup-python@v5
      #  with:
      #    python-version: ${{ env.PYTHON_VERSION }}
      #    cache: 'pip'
      #    cache-dependency-path: |
      #      **/setup.cfg
      #      **/requirements*.txt
      #  name: Install python dependencies
      #  shell: bash
      #  run: |
      #    python -m pip install --upgrade pip
      #    pip install -r docker/requirements.txt -r test/requirements_test.txt
      #- name: Linting project with flake8
      #  run: |
      #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      #- name: Run application
      #  run: |
      #    cd src
      #    gunicorn --bind=0.0.0.0:8000 wsgi:app --daemon
      #- name: Testing the project using pytest
      #  run: |
      #    coverage run -m pytest  -v -s
      #    coverage report -m
      #    coverage html
      #  continue-on-error: true
      #- name: Upload pytest test results
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: pytest-results-${{ env.PYTHON_VERSION }}
      #    path: htmlcov/index.html
      #  if: ${{ always() }}
  build_image_and_push:
    needs: build-and-test
    timeout-minutes: 30
    name: build image and push
    runs-on: ubuntu-latest
    environment: testing
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: ./docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pythontest:latest